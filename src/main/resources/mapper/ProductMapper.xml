<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="per.mike.example.dao.ProductDataMapper">
	<sql id="base_column_list">
		id, name, amt, create_time
	</sql>
	<select id="listProductDataByConditions"
		resultType="per.mike.example.bean.ProductData">
		select
		<include refid="base_column_list"/>
		from product_data
	</select>
	<select id="searchPageByConditions"
		resultType="per.mike.example.bean.ProductData" parameterType="per.mike.example.bean.ProductDataFilter">
		select
		<include refid="base_column_list"/>
		from product_data
		<where>
			<if test="filter.name != null">
				and name = #{filter.name,jdbcType=VARCHAR}
			</if>
		</where>
		order by cast(id as decimal(16,0))
	</select>
	<select id="getProductDataById"
		resultType="per.mike.example.bean.ProductData">
		select
		<include refid="base_column_list"/>
		from product_data
		where id = #{id}
	</select>
	<insert id="insertProductData">
		insert into
		product_data (id,name,amt,create_time)
		values
		(#{id},#{name},#{amt},#{createTime})
	</insert>
	<update id="updateProductData">
		update product_data
		set name = #{name}, amt = #{amt},
		create_time =
		#{createTime} where id
		= #{id}
	</update>
	<delete id="deleteProductData">
		delete from
		product_data where id = #{id}
	</delete>
</mapper>